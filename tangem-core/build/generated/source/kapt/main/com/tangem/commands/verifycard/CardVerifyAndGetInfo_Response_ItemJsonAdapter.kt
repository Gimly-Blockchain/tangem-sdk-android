// Code generated by moshi-kotlin-codegen. Do not edit.
package com.tangem.commands.verifycard

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class CardVerifyAndGetInfo_Response_ItemJsonAdapter(
  moshi: Moshi
) : JsonAdapter<CardVerifyAndGetInfo.Response.Item>() {
  private val options: JsonReader.Options = JsonReader.Options.of("error", "CID", "passed", "batch",
      "artwork", "substitution")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "error")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "CID")

  private val booleanAdapter: JsonAdapter<Boolean> = moshi.adapter(Boolean::class.java, emptySet(),
      "passed")

  private val nullableArtworkInfoAdapter: JsonAdapter<ArtworkInfo?> =
      moshi.adapter(ArtworkInfo::class.java, emptySet(), "artwork")

  private val nullableSubstitutionInfoAdapter:
      JsonAdapter<CardVerifyAndGetInfo.Response.Item.SubstitutionInfo?> =
      moshi.adapter(CardVerifyAndGetInfo.Response.Item.SubstitutionInfo::class.java, emptySet(),
      "substitution")

  @Volatile
  private var constructorRef: Constructor<CardVerifyAndGetInfo.Response.Item>? = null

  override fun toString(): String = buildString(56) {
      append("GeneratedJsonAdapter(").append("CardVerifyAndGetInfo.Response.Item").append(')') }

  override fun fromJson(reader: JsonReader): CardVerifyAndGetInfo.Response.Item {
    var error: String? = null
    var CID: String? = null
    var passed: Boolean? = false
    var batch: String? = null
    var artwork: ArtworkInfo? = null
    var substitution: CardVerifyAndGetInfo.Response.Item.SubstitutionInfo? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          error = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          CID = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("CID", "CID", reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          passed = booleanAdapter.fromJson(reader) ?: throw Util.unexpectedNull("passed", "passed",
              reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          batch = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("batch", "batch",
              reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          artwork = nullableArtworkInfoAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          substitution = nullableSubstitutionInfoAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    @Suppress("UNCHECKED_CAST")
    val localConstructor: Constructor<CardVerifyAndGetInfo.Response.Item> = this.constructorRef ?:
        CardVerifyAndGetInfo.Response.Item::class.java.getDeclaredConstructor(String::class.java,
        String::class.java, Boolean::class.javaPrimitiveType, String::class.java,
        ArtworkInfo::class.java, CardVerifyAndGetInfo.Response.Item.SubstitutionInfo::class.java,
        Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef =
        it }
    return localConstructor.newInstance(
        error,
        CID,
        passed,
        batch,
        artwork,
        substitution,
        mask0,
        null
    )
  }

  override fun toJson(writer: JsonWriter, value: CardVerifyAndGetInfo.Response.Item?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("error")
    nullableStringAdapter.toJson(writer, value.error)
    writer.name("CID")
    stringAdapter.toJson(writer, value.CID)
    writer.name("passed")
    booleanAdapter.toJson(writer, value.passed)
    writer.name("batch")
    stringAdapter.toJson(writer, value.batch)
    writer.name("artwork")
    nullableArtworkInfoAdapter.toJson(writer, value.artwork)
    writer.name("substitution")
    nullableSubstitutionInfoAdapter.toJson(writer, value.substitution)
    writer.endObject()
  }
}
